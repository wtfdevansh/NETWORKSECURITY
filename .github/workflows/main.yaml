name: workflow


on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

jobs:
    integeration:
        name: continous integration
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v2

          - name: Lint code
            run: echo "Linting code..."

          
    build-and-push-ecr-image:
        name: continous Delievery
        needs: integeration
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v2

          - name: install utilities
            run: |
              echo "Building and pushing Docker image..."
              # Add your Docker build and push commands here

              sudo apt-get update
              sudo apt-get install -y jq unzip

          - name: configure aws credentials
            uses: aws-actions/configure-aws-credentials@v1
            with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}

          - name: login to aws ecr
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v1

          - name: build and push ecr image
            id: build-image
            env:
              ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
              ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
              IMAGE_TAG: lastest
            run: |

                echo "Building Docker image..."
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    
                echo "Pushing Docker image to ECR..."
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
                echo "Docker image pushed successfully!"

    Continuous-Deployment:
     needs: build-and-push-ecr-image
     runs-on: self-hosted
     steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      
      - name: Pull latest images
        run: |
         docker pull ${{secrets.AWS_ECR_LOGIN_URI}}/${{ secrets.ECR_REPOSITORY_NAME }}:latest
         
      #- name: Stop and remove  container if running
       # run: |
        # docker ps -q --filter "name=networksecurity" | grep -q . && docker stop networksecurity && docker rm -fv networksecurity
       
      - name: Run Docker Image to serve users
        run: |
         docker run -d -p 8080:8080 --ipc="host" --name=networksecurity -e 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' -e 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' -e 'AWS_REGION=${{ secrets.AWS_REGION }}'  ${{secrets.AWS_ECR_LOGIN_URI}}/${{ secrets.ECR_REPOSITORY_NAME }}:latest
      - name: Clean previous images and containers
        run: |
         docker system prune -f            
              

 
